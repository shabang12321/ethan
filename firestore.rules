rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isValidCount(count) {
      return count is number && count >= 0;
    }
    
    function isIncrementByOne(current, next) {
      return next == current + 1;
    }

    // Visitor counter - allow read and increment by one
    match /stats/visitors {
      allow read: if true;
      allow write: if 
        request.resource.data.keys().hasOnly(['count']) &&
        isValidCount(request.resource.data.count) &&
        (resource == null || isIncrementByOne(resource.data.count, request.resource.data.count));
    }
    
    // Project likes - allow read and increment by one
    match /projects/{projectId} {
      allow read: if true;
      allow write: if 
        request.resource.data.keys().hasOnly(['likes']) &&
        isValidCount(request.resource.data.likes) &&
        (resource == null || isIncrementByOne(resource.data.likes, request.resource.data.likes));
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 